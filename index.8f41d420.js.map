{"mappings":"ACEA,MAAM,EAAa,KAEjB,IAAM,EAAY,SAAS,cAAA,CAAe,YAAY,KAAtD,AACA,CAAA,SAAS,cAAA,CAAe,YAAY,KAAA,CAAQ,GAG5C,IAAM,EAAM,SAAS,aAAA,CAAc,MACnC,CAAA,EAAI,SAAA,CAAY,WAIhB,IAAM,EAAK,SAAS,aAAA,CAAc,KAClC,CAAA,EAAG,SAAA,CAAY,EAIf,IAAM,EAAiB,SAAS,aAAA,CAAc,SAC9C,CAAA,EAAe,SAAA,CAAY,KAE3B,EAAe,gBAAA,CAAiB,QAAS,KAEvC,EAAyB,EAAe,UAAxC,EAOA,IAAM,EAAY,EAAe,UAAjC,CAGM,EAAO,EAAU,iBAAA,CAAkB,SAAzC,AAGA,CAAA,EAAU,WAAA,CAAc,KAGxB,IAAM,EAAK,SAAS,aAAA,CAAc,KAClC,CAAA,EAAG,SAAA,CAAY,EAGf,IAAM,EAAa,SAAS,aAAA,CAAc,SAC1C,CAAA,EAAW,SAAA,CAAY,KACvB,EAAW,gBAAA,CAAiB,QAAS,KAEnC,IAAM,EAAe,EAAW,UAAhC,CACA,SAAS,cAAA,CAAe,iBAAiB,WAAA,CAAY,EACvD,GAGA,EAAU,WAAA,CAAY,GACtB,EAAU,WAAA,CAAY,GAGtB,SAAS,cAAA,CAAe,iBAAiB,WAAA,CAAY,EACvD,GAGA,IAAM,EAAe,SAAS,aAAA,CAAc,SAC5C,CAAA,EAAa,SAAA,CAAY,KACzB,EAAa,gBAAA,CAAiB,QAAS,KAErC,EAAyB,EAAa,UAAtC,CAKF,GAGA,EAAI,WAAA,CAAY,GAChB,EAAI,WAAA,CAAY,GAChB,EAAI,WAAA,CAAY,GAIhB,SAAS,cAAA,CAAe,mBAAmB,WAAA,CAAY,EACzD,EAGM,EAA2B,AAAC,IAChC,SAAS,cAAA,CAAe,mBAAmB,WAAA,CAAY,EACzD,EAIA,SACG,cAAA,CAAe,cACf,gBAAA,CAAiB,QAAS,IAAM","sources":["<anon>","src/index.js"],"sourcesContent":["\nconst $35da740d59af89ba$var$onClickAdd = ()=>{\n    // テキストボックスの値を取得し、初期化する\n    const inputText = document.getElementById(\"add-text\").value;\n    document.getElementById(\"add-text\").value = \"\";\n    // dev生成。createElement関数でJavaScript上でHTMLのDOMを生成することができる。\n    const div = document.createElement(\"div\");\n    div.className = \"list-row\";\n    // console.log(div);\n    // liタグ生成\n    const li = document.createElement(\"li\");\n    li.innerText = inputText;\n    // console.log(li);\n    // button(完了)タグの生成\n    const completeButton = document.createElement(\"button\");\n    completeButton.innerText = \"完了\";\n    // クリックイベントを付与\n    completeButton.addEventListener(\"click\", ()=>{\n        // 押された完了ボタンの親タグ(div)を未完了リストから削除\n        $35da740d59af89ba$var$deleteFromIncompleteList(completeButton.parentNode);\n        // 下記2行のコードは上記コードにて関数化している\n        // const deleteTarget = completeButton.parentNode;\n        // document.getElementById(\"incomplete-list\").removeChild(deleteTarget);\n        // console.log(completeButton);\n        // 完了リストに追加する要素\n        const addTarget = completeButton.parentNode;\n        // TODO内容テキストを取得\n        const text = addTarget.firstElementChild.innerText;\n        // div以下を初期化\n        addTarget.textContent = null;\n        // liタグ生成\n        const li = document.createElement(\"li\");\n        li.innerText = text;\n        // buttonタグの生成\n        const backButton = document.createElement(\"button\");\n        backButton.innerText = \"戻す\";\n        backButton.addEventListener(\"click\", ()=>{\n            // 押された戻すボタンの親タグ(div)を完了リストから削除\n            const deleteTarget = backButton.parentNode;\n            document.getElementById(\"complete-list\").removeChild(deleteTarget);\n        });\n        // divタグの子要素に各要素を設定\n        addTarget.appendChild(li);\n        addTarget.appendChild(backButton);\n        // 完了リストに追加\n        document.getElementById(\"complete-list\").appendChild(addTarget);\n    });\n    // button(削除)タグの生成\n    const deleteButton = document.createElement(\"button\");\n    deleteButton.innerText = \"削除\";\n    deleteButton.addEventListener(\"click\", ()=>{\n        // 押された削除ボタンの親タグ(div)を未完了リストから削除\n        $35da740d59af89ba$var$deleteFromIncompleteList(deleteButton.parentNode);\n    // 下記2行のコードは上記コードにて関数化している\n    // const deleteTarger = deleteButton.parentNode;\n    // document.getElementById(\"incomplete-list\").removeChild(deleteTarger);\n    // console.log(deleteTarger);\n    });\n    // divタグの子要素に各要素を設定\n    div.appendChild(li);\n    div.appendChild(completeButton);\n    div.appendChild(deleteButton);\n    // console.log(div);\n    // 未完了リストに追加\n    document.getElementById(\"incomplete-list\").appendChild(div);\n};\n// 未完了リストから指定の要素を削除\nconst $35da740d59af89ba$var$deleteFromIncompleteList = (target)=>{\n    document.getElementById(\"incomplete-list\").removeChild(target);\n};\n// 未完了リストに追加する関数\ndocument.getElementById(\"add-button\").addEventListener(\"click\", ()=>$35da740d59af89ba$var$onClickAdd());\n\n\n//# sourceMappingURL=index.8f41d420.js.map\n","import \"./styles.css\";\n\nconst onClickAdd = () => {\n  // テキストボックスの値を取得し、初期化する\n  const inputText = document.getElementById(\"add-text\").value;\n  document.getElementById(\"add-text\").value = \"\";\n\n  // dev生成。createElement関数でJavaScript上でHTMLのDOMを生成することができる。\n  const div = document.createElement(\"div\");\n  div.className = \"list-row\";\n  // console.log(div);\n\n  // liタグ生成\n  const li = document.createElement(\"li\");\n  li.innerText = inputText;\n  // console.log(li);\n\n  // button(完了)タグの生成\n  const completeButton = document.createElement(\"button\");\n  completeButton.innerText = \"完了\";\n  // クリックイベントを付与\n  completeButton.addEventListener(\"click\", () => {\n    // 押された完了ボタンの親タグ(div)を未完了リストから削除\n    deleteFromIncompleteList(completeButton.parentNode);\n    // 下記2行のコードは上記コードにて関数化している\n    // const deleteTarget = completeButton.parentNode;\n    // document.getElementById(\"incomplete-list\").removeChild(deleteTarget);\n    // console.log(completeButton);\n\n    // 完了リストに追加する要素\n    const addTarget = completeButton.parentNode;\n\n    // TODO内容テキストを取得\n    const text = addTarget.firstElementChild.innerText;\n\n    // div以下を初期化\n    addTarget.textContent = null;\n\n    // liタグ生成\n    const li = document.createElement(\"li\");\n    li.innerText = text;\n\n    // buttonタグの生成\n    const backButton = document.createElement(\"button\");\n    backButton.innerText = \"戻す\";\n    backButton.addEventListener(\"click\", () => {\n      // 押された戻すボタンの親タグ(div)を完了リストから削除\n      const deleteTarget = backButton.parentNode;\n      document.getElementById(\"complete-list\").removeChild(deleteTarget);\n    });\n\n    // divタグの子要素に各要素を設定\n    addTarget.appendChild(li);\n    addTarget.appendChild(backButton);\n\n    // 完了リストに追加\n    document.getElementById(\"complete-list\").appendChild(addTarget);\n  });\n\n  // button(削除)タグの生成\n  const deleteButton = document.createElement(\"button\");\n  deleteButton.innerText = \"削除\";\n  deleteButton.addEventListener(\"click\", () => {\n    // 押された削除ボタンの親タグ(div)を未完了リストから削除\n    deleteFromIncompleteList(deleteButton.parentNode);\n    // 下記2行のコードは上記コードにて関数化している\n    // const deleteTarger = deleteButton.parentNode;\n    // document.getElementById(\"incomplete-list\").removeChild(deleteTarger);\n    // console.log(deleteTarger);\n  });\n\n  // divタグの子要素に各要素を設定\n  div.appendChild(li);\n  div.appendChild(completeButton);\n  div.appendChild(deleteButton);\n  // console.log(div);\n\n  // 未完了リストに追加\n  document.getElementById(\"incomplete-list\").appendChild(div);\n};\n\n// 未完了リストから指定の要素を削除\nconst deleteFromIncompleteList = (target) => {\n  document.getElementById(\"incomplete-list\").removeChild(target);\n};\n\n// 未完了リストに追加する関数\n\ndocument\n  .getElementById(\"add-button\")\n  .addEventListener(\"click\", () => onClickAdd());\n"],"names":["$35da740d59af89ba$var$onClickAdd","inputText","document","getElementById","value","div","createElement","className","li","innerText","completeButton","addEventListener","$35da740d59af89ba$var$deleteFromIncompleteList","parentNode","addTarget","text","firstElementChild","textContent","backButton","deleteTarget","removeChild","appendChild","deleteButton","target"],"version":3,"file":"index.8f41d420.js.map"}